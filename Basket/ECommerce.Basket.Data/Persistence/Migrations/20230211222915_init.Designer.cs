// <auto-generated />
using System;
using ECommerce.Basket.Data.Persistence.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.Basket.Infrastructure.Migrations
{
    [DbContext(typeof(BasketContext))]
    [Migration("20230211222915_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Basket.Infrastructure.Data.Entities.ShoppingCartEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCart", (string)null);
                });

            modelBuilder.Entity("ECommerce.Basket.Infrastructure.Data.Entities.ShoppingCartItemEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long?>("ShoppingCartEntityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingCartEntityId");

                    b.ToTable("ShoppingCartItem", (string)null);
                });

            modelBuilder.Entity("ECommerce.Basket.Infrastructure.Data.Entities.ShoppingCartItemEntity", b =>
                {
                    b.HasOne("ECommerce.Basket.Infrastructure.Data.Entities.ShoppingCartEntity", null)
                        .WithMany("Items")
                        .HasForeignKey("ShoppingCartEntityId");
                });

            modelBuilder.Entity("ECommerce.Basket.Infrastructure.Data.Entities.ShoppingCartEntity", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
